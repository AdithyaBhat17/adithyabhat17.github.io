{"version":3,"sources":["assets/specs.svg","Contact.js"],"names":["module","exports","Contact","useState","valid","setValid","useEffect","window","scrollTo","verifyEmail","emailId","a","re","RegExp","test","name","content","src","defer","className","onSubmit","e","document","form","action","alert","target","value","contact","method","encType","type","htmlFor","required","onBlur","rows","to","href","rel","sheet","alt"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,mC,0ICoF5BC,UAxEC,WAAO,IAAD,EAEQC,oBAAS,GAFjB,mBAEXC,EAFW,KAEJC,EAFI,KAIlBC,qBAAU,WACNC,OAAOC,SAAS,EAAG,MAGvB,IAAMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sDACZC,EAAK,IAAIC,OAAO,8CAChBT,EAAQQ,EAAGE,KAAKJ,GACpBL,EAASD,GAHO,2CAAH,sDAMjB,OACI,6BACI,kBAAC,SAAD,KACI,uDACA,0BAAMW,KAAK,cAAcC,QAAQ,mFACjC,0BAAMD,KAAK,iBAAiBC,QAAQ,mFACpC,gCACK,oHAEL,4BAAQC,IAAI,uEAAuEC,OAAK,KAG5F,kBAAC,IAAD,MACA,yBAAKC,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,6BACA,wBAAIA,UAAU,cAAd,gBACA,0BAAMJ,KAAK,OAAOK,SAAU,SAAAC,GAAC,OAtCrC,SAACA,GAEbC,SAASC,KAAKC,OAAO,qFACrBC,MAAM,2BAAD,OAA4BJ,EAAEK,OAAOX,KAAKY,MAA1C,iCAmCgDC,CAAQP,IAAIF,UAAU,OAAOU,OAAO,OAAOC,QAAQ,uBAChF,2BAAOC,KAAK,SAAShB,KAAK,QAAQY,MAAM,YACxC,yBAAKR,UAAU,cACX,2BAAOa,QAAQ,QAAf,QACA,2BAAOD,KAAK,OAAOhB,KAAK,OAAOI,UAAU,eAAec,UAAQ,KAEpE,yBAAKd,UAAU,cACX,2BAAOa,QAAQ,SAAf,SACA,2BACCE,OAAQ,SAACb,GAAD,OAAOZ,EAAYY,EAAEK,OAAOC,QACpCI,KAAK,QACLhB,KAAK,QACLI,UAAWf,EAAQ,eAAiB,2BACpC6B,UAAQ,KAEP7B,GAAS,2BAAOe,UAAU,SAAjB,0BAIf,yBAAKA,UAAU,cACX,2BAAOa,QAAQ,WAAf,gBACA,8BAAUG,KAAK,IAAIpB,KAAK,UAAUI,UAAU,eAAec,UAAQ,KAEvE,uBAAGd,UAAU,gBACT,2BAAOY,KAAK,SAASJ,MAAM,SAC3B,kBAAC,IAAD,CAAMS,GAAG,WAAT,iBAGR,uBAAGjB,UAAU,WAAWkB,KAAK,4BAA4BX,OAAO,SAASY,IAAI,uBAA7E,iCAEJ,yBAAKnB,UAAU,sBACX,yBAAKF,IAAKsB,IAAOC,IAAI,UAAUrB,UAAU","file":"static/js/9.4ed81f9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/specs.e2a4358e.svg\";","import React, { useState, useEffect } from 'react'\nimport Navbar from './Navbar'\nimport sheet from './assets/specs.svg'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n    \nconst contact = (e) => {\n    // TODO : Verify existence of mail id.\n    document.form.action=\"https://getsimpleform.com/messages?form_api_token=de3f3e206755bfc7b484633b6ab33cff\"\n    alert(`Thanks for reaching out ${e.target.name.value}! I'll get back to you ASAP!`)\n}\n\nconst Contact = () => {\n\n    const [valid, setValid] = useState(true)\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    })    \n\n    const verifyEmail = async (emailId) => {\n        let re = new RegExp(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/)\n        let valid = re.test(emailId)\n        setValid(valid)\n    }\n\n    return(\n        <div>\n            <Helmet>\n                <title>Contact | Adithya NR</title>\n                <meta name=\"description\" content=\"Got a project in mind, a question or something else? Get in touch with me here\"/>\n                <meta name=\"og:description\" content=\"Got a project in mind, a question or something else? Get in touch with me here\"/>\n                <script>\n                    {'var LandbotLiveConfig = { index: \\'https://landbot.io/u/H-59003-WNTZ6MRU56B9E9UL/index.html\\', accent: \\'#444444\\' }'}\n                </script>\n                <script src=\"https://static.helloumi.com/umiwebchat/umiwebchat.js?v=1531493681238\" defer>\n                </script>\n            </Helmet>\n            <Navbar />\n            <div className=\"container animated fadeIn\">\n                <div className=\"row\">\n                    <div className=\"col-lg-6 col-sm-12\">\n                        <br/>\n                        <h1 className=\"contact-h1\">Get in touch</h1>                            \n                        <form name=\"form\" onSubmit={e => contact(e)} className=\"form\" method=\"post\" encType=\"multipart/form-data\">\n                            <input type='hidden' name='_spam' value='message' />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Name</label>\n                                <input type=\"text\" name=\"name\" className=\"form-control\" required/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input\n                                 onBlur={(e) => verifyEmail(e.target.value)} \n                                 type=\"email\" \n                                 name=\"email\" \n                                 className={valid ? \"form-control\" : \"error-input form-control\"}\n                                 required\n                                />\n                                {!valid && <small className=\"error\">\n                                    Invalid email address\n                                </small>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"message\">Your Message</label>\n                                <textarea rows=\"3\" name=\"message\" className=\"form-control\" required/>\n                            </div>\n                            <p className=\"buttons left\">\n                                <input type=\"submit\" value=\"Send\"/>\n                                <Link to=\"/resume\">View Resume</Link>\n                            </p>                                \n                        </form>\n                        <a className=\"feedback\" href=\"https://5f1ed849.nolt.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Have time for some Feedback?</a>\n                    </div>\n                    <div className=\"col-lg-6 col-sm-12\">\n                        <img src={sheet} alt=\"contact\" className=\"contact-img\"/>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Contact"],"sourceRoot":""}